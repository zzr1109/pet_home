<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xw.dao.PetCategoryDao">
    <resultMap id="dataMap" type="com.xw.entity.PetCategory">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="category" column="category"/>
    </resultMap>

    <sql id="allColumn">
        id,category
    </sql>

    <!--添加语句的字段列表 insert into xxx set (image_url_list,show_status) values (#{xxxx},#{xxx})-->
    <sql id="insertColumn">
        <if test="category != null and category != ''">
            category,
        </if>
    </sql>
    <!--添加语句的值列表-->
    <sql id="insertValue">
        <if test="category != null and category != ''">
            #{category},
        </if>
    </sql>

    <!--修改语句的字段列表 update xxx image_url_list = #{xxx} where id = #{}-->
    <sql id="updateValue">
        <if test="category != null and category != ''">
            category = #{category},
        </if>
    </sql>

    <!--查询语句的字段列表 select xxx  from xx where id-->
    <sql id="commonsValue">
        <if test="category != null and category != ''">
            and category = #{category}
        </if>
    </sql>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into pet_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"></include>
        </trim>
    </insert>

    <delete id="deleteById">
        delete from pet_category
        <where>
            id = #{id}
        </where>
    </delete>

    <delete id="deleteBatchByIds">
        <if test="ids != null and ids.size() > 0">
            delete from pet_category
            where id in <foreach collection="ids" separator="," open="(" close=")" item="item">#{item}</foreach>
        </if>
    </delete>

    <select id="queryById" resultMap="dataMap">
        select <include refid="allColumn"></include> from pet_category where id = #{id}
    </select>

    <select id="queryAll" resultMap="dataMap">
        select <include refid="allColumn"></include> from pet_category
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
        order by id desc
    </select>

    <select id="queryByAll" resultMap="dataMap">
        select <include refid="allColumn"></include> from pet_category
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
        order by id desc
    </select>

    <update id="updateById">
        update pet_category
        <set>
            <include refid="updateValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <update id="updateEntity">
        update pet_category
        set category = #{category}
        <where>
            id = #{id}
        </where>
    </update>
</mapper>
