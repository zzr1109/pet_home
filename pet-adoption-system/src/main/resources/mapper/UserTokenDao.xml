<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xw.dao.UserTokenDao">
    <!--    结果集映射-->
    <resultMap id="UserTokenMap" type="com.xw.entity.UserToken">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="overdue" column="overdue" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="allColumn">
        id,token,user_id,overdue,create_time
    </sql>

    <sql id="insertColumn">
        <if test="token != null and token != ''">
            token,
        </if>
        <if test="userId != null and userId != ''">
            user_id,
        </if>
        <if test="overdue != null and overdue != ''">
            overdue,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
    </sql>

    <sql id="insertValue">
        <if test="token != null and token != ''">
            #{token},
        </if>
        <if test="userId != null and userId != ''">
            #{userId},
        </if>
        <if test="overdue != null and overdue != ''">
            #{overdue},
        </if>
        <if test="createTime != null">
            #{createTime},
        </if>
    </sql>

    <sql id="updateValue">
        <if test="token != null and token != ''">
            token = #{token},
        </if>
        <if test="userId != null and userId != ''">
            user_id = #{userId},
        </if>
        <if test="overdue != null and overdue != ''">
            overdue = #{overdue},
        </if>
        <if test="createTime != null and createTime != ''">
            create_time = #{createTime},
        </if>
    </sql>

    <sql id="commonsValue">
        <if test="token != null and token != ''">
            and token = #{token}
        </if>
        <if test="userId != null and userId != ''">
            and user_id = #{userId}
        </if>
        <if test="overdue != null and overdue != ''">
            and overdue = #{overdue}
        </if>
        <if test="createTime != null and createTime != ''">
            and create_time = #{createTime}
        </if>
    </sql>

    <select id="selectAll" resultMap="UserTokenMap">
        select
        <include refid="allColumn"></include>
        from user_token
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"></include>
        </trim>
    </insert>

    <update id="updateById">
        update user_token
        <set>
            <include refid="updateValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="selectById" resultMap="UserTokenMap">
        select
        <include refid="allColumn"></include>
        from user_token
        <where>
            id = #{id}
        </where>
    </select>


    <delete id="deleteByToken">
        delete from user_token
        <where>
            token = #{token}
        </where>
    </delete>

    <delete id="deleteById">
        delete from user_token
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="selectByUserId" resultMap="UserTokenMap">
        select <include refid="allColumn"></include> from user_token
        <where>
            user_id = #{userId}
        </where>
    </select>

    <select id="selectByToken" resultMap="UserTokenMap">
        select <include refid="allColumn"></include> from user_token
        <where>
            token = #{token}
        </where>
    </select>
</mapper>