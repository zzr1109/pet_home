<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xw.dao.NoteDao">
    <!--    结果集映射-->
    <resultMap id="NoteMap" type="com.xw.entity.Note">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userImage" column="user_image" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="allColumn">
        id,content,create_time,user_id,user_name,user_image
    </sql>

    <sql id="insertColumn">
        <if test="content != null and content != ''">
            content,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
        <if test="userId != null and userId != ''">
            user_id,
        </if>
        <if test="userName != null and userName != ''">
            user_name,
        </if>
        <if test="userImage != null and userImage != ''">
            user_image,
        </if>
    </sql>

    <sql id="insertValue">
        <if test="content != null and content != ''">
            #{content},
        </if>
        <if test="createTime != null">
            #{createTime},
        </if>
        <if test="userId != null and userId != ''">
            #{userId},
        </if>
        <if test="userName != null and userName != ''">
            #{userName},
        </if>
        <if test="userImage != null and userImage != ''">
            #{userImage},
        </if>
    </sql>

    <sql id="updateValue">
        <if test="content != null and content != ''">
            content = #{content},
        </if>
        <if test="createTime != null">
            create_time = #{createTime},
        </if>
        <if test="userId != null and userId != ''">
            user_id = #{userId},
        </if>
        <if test="userName != null and userName != ''">
            user_name = #{userName},
        </if>
        <if test="userImage != null and userImage != ''">
            user_image = #{userImage},
        </if>
    </sql>

    <sql id="commonsValue">
        <if test="content != null and content != ''">
            and content like concat("%",#{content},"%")
        </if>
        <if test="createTime != null">
            and create_time = #{createTime}
        </if>
        <if test="userId != null and userId != ''">
            and user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            and user_name = #{userName}
        </if>
        <if test="userImage != null and userImage != ''">
            and user_image = #{userImage}
        </if>
    </sql>

    <select id="selectAll" resultMap="NoteMap">
        select
        <include refid="allColumn"></include>
        from note
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
        order by id desc
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into note
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"></include>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"></include>
        </trim>
    </insert>

    <update id="updateById">
        update note
        <set>
            <include refid="updateValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <update id="updateEntity">
        update note set content = #{content},create_time = #{createTime},user_id = #{userId},user_name = #{userName},user_image = #{userImage}
        <where>
            id = #{id}
        </where>
    </update>

    <select id="selectById" resultMap="NoteMap">
        select
        <include refid="allColumn"></include>
        from note
        <where>
            id = #{id}
        </where>
    </select>


    <delete id="deleteById">
        delete from note
        <where>
            id = #{id}
        </where>
    </delete>

    <delete id="deleteBatchByIds">
        <if test="ids != null and ids.size() > 0">
            delete from note
            where id in <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        </if>
    </delete>
</mapper>