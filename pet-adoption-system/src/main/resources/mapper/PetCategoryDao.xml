<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xw.dao.PetCategoryDao">
    <!--project_info的映射结果集-->
    <resultMap type="com.xw.entity.PetCategory" id="PetCategoryMap">
        <result property="id" column="id"/>
        <result property="category" column="category"/>
    </resultMap>
    <!--全部字段-->
    <sql id="allColumn">
        id,category
    </sql>
    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="category != null and category != ''">
            category,
        </if>
    </sql>
    <!--添加语句的值列表-->
    <sql id="insertValue">
        <if test="category != null and category != ''">
            #{category},
        </if>
    </sql>
    <!--修改-->
    <sql id="updateValue">
        <if test="category != null and category != ''">
            category = #{category},
        </if>
    </sql>
    <!--通用对ProjectInfo各个属性的值的非空判断-->
    <sql id="commonsValue">
        <if test="category != null and category != ''">
            and category = #{category}
        </if>
    </sql>
    <!--新增project_info:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into pet_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>
    <!--删除project_info:通过主键-->
    <delete id="deleteById">
        delete from pet_category
        <where>
            id = #{id}
        </where>
    </delete>
    <delete id="deleteBatchByIds">
        <if test="ids != null and ids.size() > 0">
            delete from pet_category
            where id in <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        </if>
    </delete>
    <!--查询单个project_info-->
    <select id="queryById" resultMap="PetCategoryMap">
        select
        <include refid="allColumn"></include>
        from pet_category
        <where>
            id = #{id}
        </where>
    </select>
    <select id="queryAllByLimit" resultMap="PetCategoryMap">
        select
        <include refid="allColumn"></include>
        from pet_category
    </select>
    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PetCategoryMap">
        select
        <include refid="allColumn"></include>
        from pet_category
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
        order by id desc
    </select>
    <!--通过实体作为筛选条件查询-->
    <select id="queryByAll" resultMap="PetCategoryMap">
        select
        <include refid="allColumn"></include>
        from pet_category
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>
    <!--通过主键修改数据-->
    <update id="updateById">
        update pet_category
        <set>
            <include refid="updateValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <update id="updateEntity">
        update pet_category
        set category = #{category}
        <where>
            id = #{id}
        </where>
    </update>
</mapper>